var documenterSearchIndex = {"docs":
[{"location":"generated/notebooks/DSS/DSS/","page":"DSS","title":"DSS","text":"EditURL = \"nothing\"","category":"page"},{"location":"generated/notebooks/DSS/DSS/","page":"DSS","title":"DSS","text":"using PyCall\nusing Soss\nusing Statistics\nusing Stheno\nusing Stheno: Kernel\nusing Optim\nusing LombScargle\nusing Plots\nusing PyPlot\nusing Zygote","category":"page"},{"location":"generated/notebooks/DSS/DSS/","page":"DSS","title":"DSS","text":"\n    Unable to init server: Could not connect: Connection refused\n    Unable to init server: Could not connect: Connection refused\n    \n    (.:314): Gdk-CRITICAL **: 10:36:03.379: gdk_cursor_new_for_display: assertion 'GDK_IS_DISPLAY (display)' failed\n    \n    (.:314): Gdk-CRITICAL **: 10:36:03.392: gdk_cursor_new_for_display: assertion 'GDK_IS_DISPLAY (display)' failed\n\n","category":"page"},{"location":"generated/notebooks/DSS/DSS/","page":"DSS","title":"DSS","text":"kplr = pyimport(\"kplr\")\n\n# The ID of a star from the Kepler Input Catalog\nKIC_ID = 1430163\n\n# Attaching the kplr API\nclient = kplr.API()\n\n# Getting the star data\nstar = client.star(KIC_ID)\n\n# Time values\ntₐ = Vector{Float64}()\n\n# Pre-search Data Conditioning Simple Aperture Photometry (PDCSAP) flux values\nfₐ = Vector{Float32}()\n\n# The 1-sigma errors in PDC flux values\nfσₐ = Vector{Float32}()\n\n# Getting long cadence data of light curves\nfor lc in star.get_light_curves(short_cadence = false)\n\n    # Reading data from a light curve\n    data = lc.read()\n    \n    t₀ = get(data, \"TIME\")\n    f₀ = get(data, \"PDCSAP_FLUX\")\n    fσ₀ = get(data, \"PDCSAP_FLUX_ERR\")\n\n    # Creating a mask for only qualitative data points\n    mask = (get(data, \"SAP_QUALITY\") .== 0) .& isfinite.(t₀) .& isfinite.(f₀)\n    \n    append!(tₐ, t₀[mask])\n    append!(fₐ, f₀[mask])\n    append!(fσₐ, fσ₀[mask])\n\nend","category":"page"},{"location":"generated/notebooks/DSS/DSS/","page":"DSS","title":"DSS","text":"# Get access to rcParams\nrcP = PyPlot.PyDict(PyPlot.matplotlib.\"rcParams\")\n\n# Set DPI\nrcP[\"savefig.dpi\"] = 300\nrcP[\"figure.dpi\"] = 300\n\n# Activate TeX support\nrcP[\"text.usetex\"] = true\n\n# Activate languages support\nrcP[\"text.latex.preamble\"] = raw\"\\usepackage[main=english]{babel}\"\n\n# Switch to Computer Modern font set\nrcP[\"mathtext.fontset\"] = \"cm\"\n\n# Set font sizes\nrcP[\"font.size\"] = 18\nrcP[\"legend.fontsize\"] = 12;\n\ncolor = \"#425378\";","category":"page"},{"location":"generated/notebooks/DSS/DSS/","page":"DSS","title":"DSS","text":"PyPlot.plot(tₐ, fₐ, color)\n\nxlabel(L\"\\textrm{Time, days}\")\nylabel(L\"\\textrm{Flux}\")\ntitle(latexstring(\"\\\\textrm{Time Series of KIC $KIC_ID}\"))\n\nPyPlot.savefig(joinpath(\"figures\", \"TS.pdf\"), bbox_inches = \"tight\")","category":"page"},{"location":"generated/notebooks/DSS/DSS/","page":"DSS","title":"DSS","text":"(Image: png)","category":"page"},{"location":"generated/notebooks/DSS/DSS/","page":"DSS","title":"DSS","text":"mask = (tₐ .≥ 443.5105) .& (tₐ .≤ 537.5502295)\n\ntₘ = tₐ[mask]\nconst t = tₘ .- mean(tₘ)\nconst f = fₐ[mask]\nconst fσ = fσₐ[mask]\n\npad = 30\n\n# Printing the size of the subset\nprintln(rpad(\"Size of the subset:\", pad), size(t, 1))\n\n# Printing the mean of the flux\nconst μ₀ = mean(f)\nprintln(rpad(\"Mean of the flux: \", pad), μ₀)\nprintln(rpad(\"Log of this mean: \", pad), log(μ₀))\n\n# Printing the variance of the subset\nconst σ²₀ = var(f)\nprintln(rpad(\"Variance of the subset: \", pad), σ²₀)\nprintln(rpad(\"Log of this variance: \", pad), log(σ²₀))\n\n# Calculating the mean of the time differences between observations\nΔt = []\nfor i in range(2, size(t, 1), step = 1)\n    push!(Δt, t[i] - t[i-1])\nend\nΔμ = sum(Δt) / size(Δt, 1)\n    \n# Printing the mean of the time differences\nprintln(rpad(\"Mean of the time differences:\", pad), Δμ)\nprintln(rpad(\"Log of this mean:\", pad), log(Δμ))\nprintln(rpad(\"1 / Log of this mean:\", pad), 1 / log(Δμ))","category":"page"},{"location":"generated/notebooks/DSS/DSS/","page":"DSS","title":"DSS","text":"\n    Size of the subset:           3518\n    Mean of the flux:             2.125678e6\n    Log of this mean:             14.569601\n    Variance of the subset:       209401.33\n    Log of this variance:         12.2520075\n    Mean of the time differences: 0.026616617260856176\n    Log of this mean:             -3.626219549189213\n    1 / Log of this mean:         -0.2757692926297279\n\n","category":"page"},{"location":"generated/notebooks/DSS/DSS/","page":"DSS","title":"DSS","text":"# Plotting the data\nPyPlot.plot(t, f, color)\n\n# Setting labels\nxlabel(L\"\\textrm{Time, days}\")\nylabel(L\"\\textrm{Flux}\")\n\n# Setting title\ntitle(L\"\\textrm{Time Series of the 5th Quarter}\")\n\n# Saving the figure\nPyPlot.savefig(\"figures/TS_5.pdf\", bbox_inches = \"tight\")","category":"page"},{"location":"generated/notebooks/DSS/DSS/","page":"DSS","title":"DSS","text":"(Image: png)","category":"page"},{"location":"generated/notebooks/DSS/DSS/","page":"DSS","title":"DSS","text":"frequencies = range(1 / size(t, 1) + 0.0003, 1.0; length = 5000)\nplan = LombScargle.plan(t, f, fσ; frequencies)\n\np = lombscargle(plan)\nfreq, power = freqpower(p)\npeak = findmaxfreq(p)\nperiod = 1 / peak[1]\n\nprintln(\"The peak is at $(peak[1]).\")\nprintln(\"The relevant estimate of the period is $period.\")\n\nPyPlot.plot(freq, power; color)\n\ntitle(L\"\\textrm{Lomb-Scargle Periodogram}\")\nxlabel(L\"\\textrm{Frequency, days}^{-1}\")\nylabel(L\"\\textrm{Power}\")\n\nPyPlot.savefig(\"figures/LSP.pdf\", bbox_inches = \"tight\")","category":"page"},{"location":"generated/notebooks/DSS/DSS/","page":"DSS","title":"DSS","text":"(Image: png)","category":"page"},{"location":"generated/notebooks/DSS/DSS/","page":"DSS","title":"DSS","text":"\n    The peak is at 0.2222990081813975.\n    The relevant estimate of the period is 4.498445621421726.\n\n","category":"page"},{"location":"generated/notebooks/DSS/DSS/","page":"DSS","title":"DSS","text":"PyPlot.plot(freq, power; color)\n\ntitle(L\"\\textrm{Lomb-Scargle Periodogram}\")\nxlabel(L\"\\textrm{Frequency (log scale), days}^{-1}\")\nylabel(L\"\\textrm{Power}\")\nxscale(\"log\")\n\nPyPlot.savefig(\"figures/LSP (log).pdf\", bbox_inches = \"tight\")","category":"page"},{"location":"generated/notebooks/DSS/DSS/","page":"DSS","title":"DSS","text":"(Image: png)","category":"page"},{"location":"generated/notebooks/DSS/DSS/","page":"DSS","title":"DSS","text":"lₜ = 0.04\n\ng = GP(stretch(Stheno.EQ(), 1 / lₜ^2), GPC())\n\nx = range(-100, 100; length = 2000)\ny = rand(g(x, 0.1))\n\nPyPlot.plot(x, y; color)\n\ntitle(L\"\\textrm{A trial plot for kernel } e^{-\\frac{1}{2}\\frac{\\tau^2}{l^2}}\")\nxlabel(L\"\\textrm{x}\")\nylabel(L\"\\textrm{y}\")\n\nPyPlot.savefig(\"figures/EQ.pdf\", bbox_inches = \"tight\")","category":"page"},{"location":"generated/notebooks/DSS/DSS/","page":"DSS","title":"DSS","text":"(Image: png)","category":"page"},{"location":"generated/notebooks/DSS/DSS/","page":"DSS","title":"DSS","text":"g = GP(Stheno.Cosine(period / 2), GPC())\n\nx = range(-10, 10; length = 200)\ny = rand(g(x, 0.1))\n\nPyPlot.plot(x, y; color)\n\ntitle(L\"\\textrm{A trial plot for kernel } \\cos\\frac{\\pi \\tau}{p}\")\nxlabel(L\"\\textrm{x}\")\nylabel(L\"\\textrm{y}\")\n\nPyPlot.savefig(\"figures/Cosine.pdf\", bbox_inches = \"tight\")","category":"page"},{"location":"generated/notebooks/DSS/DSS/","page":"DSS","title":"DSS","text":"(Image: png)","category":"page"},{"location":"generated/notebooks/DSS/DSS/","page":"DSS","title":"DSS","text":"Aₜ = σ²₀\nlₜ = 0.04\n\nDSS = Aₜ * stretch(Stheno.EQ(), 1 / lₜ^2) * Stheno.Cosine(period / 2)\n\ng = GP(DSS, GPC())\n\nx = range(-10, 10; length = 200)\ny = rand(g(x, 0.1))\n\nPyPlot.plot(x, y; color)\n\ntitle(L\"\\textrm{A trial plot for DSS kernel}\")\nxlabel(L\"\\textrm{x}\")\nylabel(L\"\\textrm{y}\")\n\nPyPlot.savefig(\"figures/DSS.pdf\", bbox_inches = \"tight\")","category":"page"},{"location":"generated/notebooks/DSS/DSS/","page":"DSS","title":"DSS","text":"(Image: png)","category":"page"},{"location":"generated/notebooks/DSS/DSS/","page":"DSS","title":"DSS","text":"g = GP(μ₀, DSS, GPC())\n\nx = range(-10, 10; length = 200)\ny = rand(g(x, 0.1))\n\nPyPlot.plot(x, y; color)\n\ntitle(L\"\\textrm{DSS with mean}\")\nxlabel(L\"\\textrm{x}\")\nylabel(L\"\\textrm{y}\")\n\nPyPlot.savefig(\"figures/DSS (with mean).pdf\", bbox_inches = \"tight\")","category":"page"},{"location":"generated/notebooks/DSS/DSS/","page":"DSS","title":"DSS","text":"(Image: png)","category":"page"},{"location":"generated/notebooks/DSS/DSS/","page":"DSS","title":"DSS","text":"# M = @model t begin\n#     Aₛ ~ Normal(0, 1)\n#     aₛ ~ Normal(0, 1)\n#     periodₛ ~ Normal(0, 1)\n#     g = Stheno.GP(Aₛ * EQC(aₛ) * Stheno.Cosine(periodₛ / 2), Stheno.GPC())\n#     f ~ g(t, 0.05)\n#     end;","category":"page"},{"location":"generated/notebooks/DSS/DSS/","page":"DSS","title":"DSS","text":"# form = xform(M(t=t), (f=f,))\n\n# function ℓπ(θ)\n#     (θ_, logjac) = Soss.transform_and_logjac(form, θ)\n#     return logpdf(M(t=t), merge(θ_, (f=f,))) + logjac\n# end\n\n# nlj(θ) = -ℓπ(θ);","category":"page"},{"location":"generated/notebooks/DSS/DSS/","page":"DSS","title":"DSS","text":"# # # Hack to make Zygote play nicely with a particular thing in Distributions.\n# Zygote.@nograd Distributions.insupport\n\n# # Point estimate of parameters via BFGS.\n# θ₀ = [0.03782039385618707, 27.800588611994993, 4.025972513638813]\n# # θ₀ = randn(5)\n# results = Optim.optimize(nlj, θ->first(gradient(nlj, θ)), θ₀, BFGS(); inplace = false)\n# θ, _ = Soss.transform_and_logjac(form, results.minimizer)","category":"page"},{"location":"generated/notebooks/DSS/DSS/","page":"DSS","title":"DSS","text":"function unpack(θ)\n    A = θ[1]\n    l = θ[2]\n    P = θ[3]\n    μ = θ[4]\n    σ² = θ[5]\n    return A, l, P, μ, σ²\nend\n\nfunction nlml(θ)\n    A, l, P, μ, σ² = unpack(θ)\n    k = A * stretch(EQ(), 1 / l^2) * Stheno.Cosine(P / 2)\n    g = GP(μ, k, GPC())\n    return -logpdf(g(t, σ²), f)\nend","category":"page"},{"location":"generated/notebooks/DSS/DSS/","page":"DSS","title":"DSS","text":"\n    nlml (generic function with 1 method)\n\n\n","category":"page"},{"location":"generated/notebooks/DSS/DSS/","page":"DSS","title":"DSS","text":"# θ₀ = [0.03782039385618707, 27.800588611994993, 4.025972513638813, 0.1]\n# θ₀ = [0.03782039385618707, 27.800588611994993, 4.025972513638813]\n# results = Optim.optimize(nlml, θ₀, NelderMead())\n\n# θ₀ = [0.03782039385618707, 27.800588611994993, 4.025972513638813, 0.1]\n# θ₀ = [1, 1/2, period / 2]\nθ₀ = [σ²₀, 0.55, 3.88, μ₀, 6000]\nθₗ = [209000.0, 0.45, 3.0, 2125650.0, 5950.0]\nθᵤ = [210000.0, 0.7, 4.5, 2125750.0, 6050.0]\nresults = Optim.optimize(\n    nlml,\n    θ->Zygote.gradient(nlml, θ)[1],\n    θₗ,\n    θᵤ,\n    θ₀,\n    Fminbox(LBFGS()),\n    Optim.Options(\n        iterations = 10,\n        show_trace = true,\n        extended_trace = true,\n        store_trace = false,\n    );\n    inplace = false,\n)","category":"page"},{"location":"generated/notebooks/DSS/DSS/","page":"DSS","title":"DSS","text":"\n    Fminbox\n    -------\n    Initial mu = 0.0205539\n    \n    Fminbox iteration 1\n    -------------------\n    Calling inner optimizer with mu = 0.0205539\n    \n    (numbers below include barrier contribution)\n    Iter     Function value   Gradient norm \n         0     2.119242e+04     3.998282e+02\n     * Current step size: 1.0\n     * time: 0.0005290508270263672\n     * g(x): [0.00013976047838235305, 399.8282216657727, -1.0873415027399378, 0.003565983494533929, -0.0024801570797695696]\n     * x: [209401.328125, 0.55, 3.88, 2.125678e6, 6000.0]\n         1     2.118634e+04     1.294103e+01\n     * Current step size: 0.00028793417946751355\n     * time: 181.7891490459442\n     * g(x): [0.0002221468440328038, 12.941032637195681, -4.474617097632583, 0.0037150532062529013, 0.007061735604336403]\n     * x: [209401.32812495975, 0.5209934034787261, 3.8802898882940404, 2.125677999998973e6, 6000.000000714111]\n         2     2.118435e+04     1.696731e+01\n     * Current step size: 0.14377606324365522\n     * time: 547.1100471019745\n     * g(x): [0.00022335871275657492, -16.967310814596907, -0.2334140716194102, 0.0036698106282941137, 0.007556348088945188]\n     * x: [209401.32809261352, 0.5155051427292547, 4.491155767361329, 2.125677999463899e6, 5999.998939535215]\n         3     2.118435e+04     1.474876e+01\n     * Current step size: 0.12038170332644237\n     * time: 729.8048729896545\n     * g(x): [0.0002228968624491474, -14.748761041681158, 0.6324314193844289, 0.0036673822952695808, 0.007506521886562407]\n     * x: [209401.32806604615, 0.5156418173993742, 4.493523926255944, 2.1256779990209755e6, 5999.998076687209]\n         4     2.118434e+04     1.174398e+00\n     * Current step size: 0.1372772944167524\n     * time: 851.57297706604\n     * g(x): [0.00021970183539720163, 1.1743982818894092, -0.22578949235383172, 0.003651788550426643, 0.007152817190178287]\n     * x: [209401.32787365207, 0.5167163611597925, 4.490853687645611, 2.125677995814512e6, 5999.991825371607]\n         5     2.118434e+04     3.975674e-01\n     * Current step size: 1.392725764202965\n     * time: 1034.5845539569855\n     * g(x): [0.00022001403607662672, -0.39756740962707704, 0.016059808026248845, 0.003649461424028105, 0.007187177938529965]\n     * x: [209401.32758522255, 0.5166068188837685, 4.491759906531879, 2.1256779910251936e6, 5999.982408264144]\n         6     2.118434e+04     4.840306e-01\n     * Current step size: 7.764120722654376\n     * time: 1278.3682699203491\n     * g(x): [0.00021983152985779176, 0.48403057837081553, 0.4546444558890701, 0.0036190382385771084, 0.007163470395188375]\n     * x: [209401.32518467287, 0.5166581796670238, 4.492975133910911, 2.1256779511866565e6, 5999.904059529862]\n         7     2.118433e+04     8.304972e+00\n     * Current step size: 11.818222776791607\n     * time: 1521.7932069301605\n     * g(x): [0.00021829168293461805, 8.30497195110212, 1.9930446959408266, 0.003084480066102906, 0.0069207085105766255]\n     * x: [209401.2823032071, 0.5171379552497307, 4.4953509509269445, 2.1256772399872243e6, 5998.504542953791]\n         8     2.118429e+04     3.663705e+01\n     * Current step size: 4.521568792003812\n     * time: 1704.642795085907\n     * g(x): [0.00021296557207855748, 36.637054577009664, 0.3786341925966239, -0.0014590191149870288, 0.005686795746222522]\n     * x: [209400.91693324354, 0.5187838236608519, 4.492311431148441, 2.1256711834711535e6, 5986.580365732769]\n         9     2.118419e+04     9.404035e+00\n     * Current step size: 2.5180518411024053\n     * time: 1887.0345358848572\n     * g(x): [0.0002188089444801438, 9.404035192954488, 3.3013766626746026, -0.009678016097325404, 0.0048766970796899735]\n     * x: [209400.30077864102, 0.51649648798582, 4.496403427332518, 2.1256609816014725e6, 5966.473064662498]\n        10     2.118418e+04     9.239407e-02\n     * Current step size: 0.9558780694878023\n     * time: 2008.5646300315857\n     * g(x): [0.00022072715984079128, 0.09239407363067637, -0.08873356322114034, -0.010149969727027048, 0.004968076858554742]\n     * x: [209400.2693498992, 0.5158772919725187, 4.491365332694086, 2.125660475021127e6, 5965.449599526506]\n    \n    Exiting inner optimizer with x = [209400.2693498992, 0.5158772919725187, 4.491365332694086, 2.125660475021127e6, 5965.449599526506]\n    Current distance to box: 0.00863467\n    Decreasing barrier term μ.\n    \n    Fminbox iteration 2\n    -------------------\n    Calling inner optimizer with mu = 2.05539e-5\n    \n    (numbers below include barrier contribution)\n    Iter     Function value   Gradient norm \n         0     2.118454e+04     2.452979e+00\n     * Current step size: 1.0\n     * time: 0.0005738735198974609\n     * g(x): [0.00023778837371744125, 0.2925650390476707, -2.4529785633686707, -0.008419108021723016, 0.006054277482571452]\n     * x: [209400.2693498992, 0.5158772919725187, 4.491365332694086, 2.125660475021127e6, 5965.449599526506]\n         1     2.118453e+04     1.647981e+01\n     * Current step size: 0.003953373714989099\n     * time: 243.16345405578613\n     * g(x): [0.0002411183806960016, -16.479811601242922, -2.495260795979947, -0.008449556780939635, 0.006428823725979967]\n     * x: [209400.26934895915, 0.5147268193350644, 4.498967145749724, 2.125660475054411e6, 5965.449575591687]\n         2     2.118453e+04     1.644802e+01\n     * Current step size: 9.279448684248467e-6\n     * time: 727.8566100597382\n     * g(x): [0.00024110552742509915, -16.44802284627418, -0.28721735859550046, -0.00844938568978735, 0.006427853788534065]\n     * x: [209400.26934883048, 0.5147242387639926, 4.4999907637822885, 2.1256604750589663e6, 5965.449572312697]\n         3     2.118453e+04     4.480041e+01\n     * Current step size: 0.08982502857518294\n     * time: 1091.252965927124\n     * g(x): [0.00024080347652759746, -14.945908047898694, 44.80040712256991, -0.008446055398724403, 0.006394209008626264]\n     * x: [209400.26932746408, 0.5148238362470702, 4.499999565512347, 2.1256604758153367e6, 5965.44902786117]\n         4     2.118452e+04     2.626775e+00\n     * Current step size: 0.0022516103647389645\n     * time: 1212.7623488903046\n     * g(x): [0.00023726460411045727, 2.6267748702380844, -1.9013633359414497, -0.008406905654243266, 0.005999523139497072]\n     * x: [209400.26907681057, 0.5159922806106431, 4.499960687970223, 2.125660484688449e6, 5965.442640777761]\n         5     2.118452e+04     1.829737e+00\n     * Current step size: 1.3400637950900915\n     * time: 1394.6988530158997\n     * g(x): [0.00023791995737518253, -0.6190571111611941, -1.8297366709347525, -0.008406057013110483, 0.0060723170323975]\n     * x: [209400.2688026487, 0.5157759025042216, 4.499966285971813, 2.1256604943868583e6, 5965.435655845103]\n         6     2.118451e+04     9.573104e+01\n     * Current step size: 54.790136823841955\n     * time: 1879.5550019741058\n     * g(x): [0.0002379711913715353, -0.6623845068200904, 95.73104398506247, -0.00798777912679088, 0.0060597540871893795]\n     * x: [209400.25225176496, 0.5157623077295916, 4.499999790630309, 2.1256610794844087e6, 5965.013979473896]\n         7     2.118451e+04     5.709003e+02\n     * Current step size: 0.005120398597443235\n     * time: 2122.3198029994965\n     * g(x): [0.0002379662478332599, -0.6347791780768328, 570.9002849483894, -0.007981523064618183, 0.0060589322560084995]\n     * x: [209400.25200608297, 0.5157639884221809, 4.4999999641505495, 2.125661088165024e6, 5965.0077202531065]\n         8     2.118448e+04     1.042601e+02\n     * Current step size: 0.9574995681187539\n     * time: 2243.5440418720245\n     * g(x): [0.00023295078543114717, 25.837350549776797, 104.26012775378308, -0.004054433502374408, 0.005333482783671825]\n     * x: [209400.09761113345, 0.5174346859484807, 4.499999807136552, 2.125666543973154e6, 5961.0741911934865]\n         9     2.118441e+04     1.307777e+02\n     * Current step size: 3.562217656075008\n     * time: 2486.29900097847\n     * g(x): [0.00023851300164283424, -0.06801093016670662, 130.77768846591815, 0.0040653502072982945, 0.005642324007521084]\n     * x: [209399.7751677656, 0.5155202331966965, 4.499999845704406, 2.1256779227514486e6, 5952.859833699164]\n        10     2.118441e+04     6.816409e+00\n     * Current step size: 121.39661509779721\n     * time: 2789.055098056793\n     * g(x): [0.00023716858116047722, 6.81640948732196, 1.057409962531879, 0.005396075648282773, 0.0053706542366874065]\n     * x: [209399.67931033406, 0.5159260855566354, 4.499994056718684, 2.125679791009689e6, 5950.470619449984]\n    \n    Exiting inner optimizer with x = [209399.67931033406, 0.5159260855566354, 4.499994056718684, 2.125679791009689e6, 5950.470619449984]\n    Current distance to box: 5.94328e-6\n    Decreasing barrier term μ.\n    \n    Fminbox iteration 3\n    -------------------\n    Calling inner optimizer with mu = 2.05539e-8\n    \n    (numbers below include barrier contribution)\n    Iter     Function value   Gradient norm \n         0     2.118441e+04     6.816609e+00\n     * Current step size: 1.0\n     * time: 0.0005521774291992188\n     * g(x): [0.00023718575175719813, 6.8166093980356965, -2.3974611792663656, 0.005396472434449892, 0.005414078412176084]\n     * x: [209399.67931033406, 0.5159260855566354, 4.499994056718684, 2.125679791009689e6, 5950.470619449984]\n         1     2.118441e+04     2.428804e+00\n     * Current step size: 6.567033440971167e-5\n     * time: 120.99755501747131\n     * g(x): [0.00023854293169640886, 0.08611659916416982, -2.428804283541794, 0.005404139919573448, 0.005566107379011016]\n     * x: [209399.6793103185, 0.5154784389264452, 4.4999943268241065, 2.125679791009335e6, 5950.47061909444]\n         2     2.118441e+04     1.403862e+00\n     * Current step size: 0.0014881488395308954\n     * time: 604.5360660552979\n     * g(x): [0.00023854292329614644, 0.08598646534291994, -1.4038621255969423, 0.005404133758574385, 0.005566108708528006]\n     * x: [209399.6793099634, 0.5154784037342688, 4.499999980016669, 2.1256797910012905e6, 5950.470610806529]\n         3     2.118441e+04     2.894151e+00\n     * Current step size: 0.002058582274795364\n     * time: 846.401153087616\n     * g(x): [0.00023854295958647566, 0.08580923703532628, 2.8941511042049495, 0.0054041259838314894, 0.005566112328891595]\n     * x: [209399.67930947128, 0.5154783916140768, 4.499999996141247, 2.1256797909901426e6, 5950.470599320604]\n         4     2.118441e+04     8.125997e+03\n     * Current step size: 0.23074722054267752\n     * time: 1330.2530341148376\n     * g(x): [0.00023856932994558967, -0.04245732638011357, 8125.997360769578, 0.005398505688086945, 0.00556873529493468]\n     * x: [209399.67895364852, 0.5154696705857781, 4.499999999997471, 2.1256797829295057e6, 5950.462294337307]\n         5     2.118440e+04     7.190285e+00\n     * Current step size: 0.0026164552084427463\n     * time: 2058.621378183365\n     * g(x): [0.0002400374681967806, -7.19028527338446, 0.16513183944692011, 0.005085199960192094, 0.0038111878736996523]\n     * x: [209399.65914734697, 0.5149841290041237, 4.49999999218823, 2.1256793342470373e6, 5950.000010797034]\n         6     2.118440e+04     7.190267e+00\n     * Current step size: 1.8453614095836568e-5\n     * time: 2240.716560125351\n     * g(x): [0.0002400374650881369, -7.190267042652023, 0.16513940445880904, 0.005085193954486144, -0.0032740595523747286]\n     * x: [209399.65914697797, 0.5149841299993265, 4.499999992188252, 2.1256793342386847e6, 5950.000002286585]\n         7     2.118440e+04     3.820645e+00\n     * Current step size: 1.0073996790310435\n     * time: 2422.3640360832214\n     * g(x): [0.00023856984418489132, 0.09829479354457875, 3.8206451091264553, 0.005070595662595245, -0.041995223419079464]\n     * x: [209399.65871812872, 0.5154680797857637, 4.499999996712872, 2.125679324858564e6, 5950.000000432297]\n         8     2.118438e+04     4.632534e+00\n     * Current step size: 1324.1235509636465\n     * time: 2846.6010670661926\n     * g(x): [0.0002377347454384577, 4.63253378503107, 1.1084662487915913, 0.0002363674266749896, 0.005451504886823809]\n     * x: [209399.34087588554, 0.5157671939900995, 4.499999994159322, 2.1256725731746634e6, 5950.058853492352]\n         9     2.118438e+04     1.324557e-01\n     * Current step size: 1.0434276354442025\n     * time: 3028.1313841342926\n     * g(x): [0.00023867051536795948, -0.010725005408486223, -0.13245565991682406, 5.051647134931057e-5, 0.0055564963280588485]\n     * x: [209399.32840721175, 0.5154584531336883, 4.49999999106302, 2.1256723135015694e6, 5950.061129593341]\n        10     2.118438e+04     1.352707e-01\n     * Current step size: 1.5310086854169895\n     * time: 3209.6829771995544\n     * g(x): [0.0002386673839069212, 0.004492603121179457, -0.13527065126994442, 3.161749541897711e-5, 0.00555616314953852]\n     * x: [209399.3268021077, 0.5154594697713143, 4.49999999105179, 2.1256722871064264e6, 5950.061347921621]\n    \n    Exiting inner optimizer with x = [209399.3268021077, 0.5154594697713143, 4.49999999105179, 2.1256722871064264e6, 5950.061347921621]\n    Current distance to box: 8.94821e-9\n    Decreasing barrier term μ.\n    \n    Fminbox iteration 4\n    -------------------\n    Calling inner optimizer with mu = 2.05539e-11\n    \n    (numbers below include barrier contribution)\n    Iter     Function value   Gradient norm \n         0     2.118438e+04     2.429959e+00\n     * Current step size: 1.0\n     * time: 0.0005581378936767578\n     * g(x): [0.00023866740114294194, 0.004492805534135949, -2.4299588564408405, 3.1618152509139e-5, 0.005556497647389527]\n     * x: [209399.3268021077, 0.5154594697713143, 4.49999999105179, 2.1256722871064264e6, 5950.061347921621]\n         1     2.118438e+04     2.429236e+00\n     * Current step size: 0.00024405161570153252\n     * time: 181.2830581665039\n     * g(x): [0.00023867072595961864, -0.012003191612968225, -2.4292362945797787, 3.161775484105651e-5, 0.005556869963291745]\n     * x: [209399.32680204947, 0.5154583732948705, 4.499999993362029, 2.1256722871064185e6, 5950.061346565549]\n         2     2.118438e+04     8.243013e-01\n     * Current step size: 0.0002174511070281449\n     * time: 605.0441620349884\n     * g(x): [0.00023867072511940654, -0.011998283923187449, 0.8243013397403645, 3.161773691679461e-5, 0.005556869704954443]\n     * x: [209399.32680185893, 0.5154583734851791, 4.499999999993689, 2.1256722871063934e6, 5950.061342129236]\n         3     2.118438e+04     3.854508e+03\n     * Current step size: 0.0010669640468801852\n     * time: 907.3717470169067\n     * g(x): [0.0002386707225634848, -0.011984516961316213, 3854.5078785742953, 3.16177128593476e-5, 0.005556869190466966]\n     * x: [209399.32680159647, 0.5154583742663521, 4.499999999999995, 2.1256722871063584e6, 5950.061336019033]\n         4     2.118438e+04     7.689564e+02\n     * Current step size: 0.00576025636221356\n     * time: 1875.165120124817\n     * g(x): [0.00023864496946409352, 0.12693016317669487, 768.9563715385075, 3.137537789582439e-5, 0.001789552495469902]\n     * x: [209399.32416707798, 0.5154662226182626, 4.499999999999973, 2.125672286757346e6, 5950.000000005463]\n         5     2.118438e+04     7.689564e+02\n     * Current step size: 4.207043357826866e-8\n     * time: 1996.2182130813599\n     * g(x): [0.00023864496942833504, 0.12693019881373924, 768.9563715383943, 3.137537748273122e-5, 0.0006895595379032993]\n     * x: [209399.32416707792, 0.5154662226178827, 4.499999999999973, 2.125672286757346e6, 5950.000000004227]\n         6     2.118438e+04     1.273261e+01\n     * Current step size: 1.0381773298523955\n     * time: 2178.003968000412\n     * g(x): [0.00023867194513671193, -0.006907662891491422, 12.732608098533818, 3.134836678519866e-5, -0.00112946600649802]\n     * x: [209399.32391403633, 0.5154573265834211, 4.499999999998645, 2.125672286724083e6, 5950.000000003075]\n         7     2.118438e+04     2.426602e+00\n     * Current step size: 77737.8655364742\n     * time: 2722.6697239875793\n     * g(x): [0.0002385212163951314, 0.549657810906386, -2.4266018588692684, -0.0018084945614737246, 0.005542667274670229]\n     * x: [209379.7615003888, 0.5154909593011219, 4.499999993061754, 2.125669717169672e6, 5950.000094307712]\n         8     2.118438e+04     2.429607e+00\n     * Current step size: 1.172328764603593\n     * time: 2904.1144251823425\n     * g(x): [0.00023865017979874057, -0.09147906318324223, -2.429606997242452, -0.0018179960038777665, 0.005557146480285717]\n     * x: [209379.64697703483, 0.5154483225450264, 4.4999999930212375, 2.1256697042837506e6, 5950.0000948495635]\n         9     2.118429e+04     2.437470e+00\n     * Current step size: 25206.715135802264\n     * time: 4296.1001970767975\n     * g(x): [4.8077096824251274e-5, -1.6725749408938986, -2.4374699152536423, 0.001414279426098165, 0.00560677033090281]\n     * x: [209000.0000001079, 0.5152664150906964, 4.499999861004216, 2.1256742144992207e6, 5950.001707474268]\n        10     2.118429e+04     2.437470e+00\n     * Current step size: 5.927404147129426e-11\n     * time: 4417.363552093506\n     * g(x): [3.7670768250289404e-5, -1.6725747891003822, -2.437469915308116, 0.0014142794255250497, 0.0056067703295328035]\n     * x: [209000.0000001023, 0.5152664150907015, 4.499999861004216, 2.1256742144992207e6, 5950.001707474268]\n    \n    Exiting inner optimizer with x = [209000.0000001079, 0.5152664150906964, 4.499999861004216, 2.1256742144992207e6, 5950.001707474268]\n    Current distance to box: 1.07888e-7\n    Decreasing barrier term μ.\n    \n    Fminbox iteration 5\n    -------------------\n    Calling inner optimizer with mu = 2.05539e-14\n    \n    (numbers below include barrier contribution)\n    Iter     Function value   Gradient norm \n         0     2.118429e+04     2.437618e+00\n     * Current step size: 1.0\n     * time: 0.0005459785461425781\n     * g(x): [0.00023839827793754105, -1.6725749406904415, -2.437617641681046, 0.0014142794266752022, 0.005606782356268134]\n     * x: [209000.0000001079, 0.5152664150906964, 4.499999861004216, 2.1256742144992207e6, 5950.001707474268]\n         1     2.118429e+04     1.669602e+00\n     * Current step size: 1.1768460931464275e-7\n     * time: 787.5763239860535\n     * g(x): [0.00023839767732324892, -1.66960177251779, -0.33381807600549473, 0.0014142785853201991, 0.005606715257386994]\n     * x: [209000.0000001079, 0.5152666119270248, 4.49999999999999, 2.1256742144992207e6, 5950.001707473609]\n         2     2.118429e+04     2.429818e+00\n     * Current step size: 6.687234863367258e-5\n     * time: 913.407548904419\n     * g(x): [0.00023804929837478552, 0.0037564517091772023, -2.4298178358212117, 0.0014138107032393927, 0.005568959696266933]\n     * x: [209000.00000010213, 0.5153777851511084, 4.499999842897744, 2.125674214499126e6, 5950.001707099426]\n         3     2.118429e+04     2.429818e+00\n     * Current step size: 0.0012742687453215981\n     * time: 2720.744057893753\n     * g(x): [-0.00046797628398807377, 0.0037512987159408406, -2.429817857978401, 0.0014138094129348688, 0.005568959577584119]\n     * x: [209000.00000000003, 0.5153777846398717, 4.499999843102461, 2.1256742144973245e6, 5950.001700002883]\n         4     2.118429e+04     2.429818e+00\n     * Current step size: 2.4167292438314263e-7\n     * time: 4432.588050842285\n     * g(x): [-0.00046797628396082403, 0.0037511644575684367, -2.4298178578264764, 0.0014138094127444656, 0.005568959575535461]\n     * x: [209000.00000000003, 0.5153777846397504, 4.499999843102529, 2.125674214497324e6, 5950.0017000005255]\n    \n    Exiting inner optimizer with x = [209000.00000000003, 0.5153777846398717, 4.499999843102461, 2.1256742144973245e6, 5950.001700002883]\n    Current distance to box: 2.91038e-11\n    Decreasing barrier term μ.\n    \n    Fminbox iteration 6\n    -------------------\n    Calling inner optimizer with mu = 2.05539e-17\n    \n    (numbers below include barrier contribution)\n    Iter     Function value   Gradient norm \n         0     2.118429e+04     2.429818e+00\n     * Current step size: 1.0\n     * time: 0.0005469322204589844\n     * g(x): [0.00023754433447498817, 0.003751298716143695, -2.4298179888494804, 0.0014138094129354458, 0.0055689595896623355]\n     * x: [209000.00000000003, 0.5153777846398717, 4.499999843102461, 2.1256742144973245e6, 5950.001700002883]\n         1     2.118429e+04     2.406676e+00\n     * Current step size: 6.462563935910516e-8\n     * time: 1769.4853818416595\n     * g(x): [0.0002375443319885251, 0.003758461809171134, -2.406675946448814, 0.0014138094047590844, 0.005568959388349206]\n     * x: [209000.00000000003, 0.5153777843974416, 4.499999999999999, 2.1256742144973245e6, 5950.001700002523]\n         2     2.118429e+04     2.406676e+00\n     * Current step size: 2.5074618965253624e-11\n     * time: 3355.6286039352417\n     * g(x): [0.00023754433199117477, 0.0037585377261128796, -2.406675946843737, 0.0014138094044477665, 0.0055689593886286675]\n     * x: [209000.00000000003, 0.5153777843973287, 4.499999999999999, 2.1256742144973245e6, 5950.001700002523]\n         3     2.118429e+04     2.406676e+00\n     * Current step size: 5.963682252894489e-12\n     * time: 5246.623396873474\n     * g(x): [0.00023754433199117477, 0.0037585377261128796, -2.406675946843737, 0.0014138094044477665, 0.0055689593886286675]\n     * x: [209000.00000000003, 0.5153777843973287, 4.499999999999999, 2.1256742144973245e6, 5950.001700002523]\n    \n    Exiting inner optimizer with x = [209000.00000000003, 0.5153777843973287, 4.499999999999999, 2.1256742144973245e6, 5950.001700002523]\n    Current distance to box: 8.88178e-16\n    Decreasing barrier term μ.\n    \n    Fminbox iteration 7\n    -------------------\n    Calling inner optimizer with mu = 2.05539e-20\n    \n    (numbers below include barrier contribution)\n    Iter     Function value   Gradient norm \n         0     2.118429e+04     2.429794e+00\n     * Current step size: 1.0\n     * time: 0.0005419254302978516\n     * g(x): [0.00023824985260963784, 0.0037585377261130826, -2.4297944464695354, 0.0014138094044477672, 0.0055689593886407455]\n     * x: [209000.00000000003, 0.5153777843973287, 4.499999999999999, 2.1256742144973245e6, 5950.001700002523]\n\n\n\n    InterruptException:\n\n    \n\n    Stacktrace:\n\n     [1] reshape at ./reshapedarray.jl:51 [inlined]\n\n     [2] reshape at ./reshapedarray.jl:111 [inlined]\n\n     [3] reshape at ./reshapedarray.jl:141 [inlined]\n\n     [4] _maybe_reshape_parent at ./subarray.jl:120 [inlined]\n\n     [5] view at ./subarray.jl:159 [inlined]\n\n     [6] maybeview at ./views.jl:133 [inlined]\n\n     [7] dotview at ./broadcast.jl:1160 [inlined]\n\n     [8] (::Zygote.var\"#829#830\"{LinearAlgebra.Symmetric{Float64,Array{Float64,2}},LinearAlgebra.Cholesky{Float64,Array{Float64,2}}})(::NamedTuple{(:uplo, :info, :factors),Tuple{Nothing,Nothing,Array{Float64,2}}}) at /home/paveloom/.julia/packages/Zygote/seGHk/src/lib/array.jl:534\n\n     [9] (::Zygote.var\"#3242#back#831\"{Zygote.var\"#829#830\"{LinearAlgebra.Symmetric{Float64,Array{Float64,2}},LinearAlgebra.Cholesky{Float64,Array{Float64,2}}}})(::NamedTuple{(:uplo, :info, :factors),Tuple{Nothing,Nothing,Array{Float64,2}}}) at /home/paveloom/.julia/packages/ZygoteRules/6nssF/src/adjoint.jl:49\n\n     [10] logpdf at /home/paveloom/.julia/packages/Stheno/II2B3/src/abstract_gp.jl:198 [inlined]\n\n     [11] (::typeof(∂(logpdf)))(::Array{Float64,1}) at /home/paveloom/.julia/packages/Zygote/seGHk/src/compiler/interface2.jl:0\n\n     [12] logpdf at /home/paveloom/.julia/packages/Stheno/II2B3/src/abstract_gp.jl:195 [inlined]\n\n     [13] (::typeof(∂(logpdf)))(::Float64) at /home/paveloom/.julia/packages/Zygote/seGHk/src/compiler/interface2.jl:0\n\n     [14] nlml at ./In[16]:14 [inlined]\n\n     [15] (::typeof(∂(nlml)))(::Float64) at /home/paveloom/.julia/packages/Zygote/seGHk/src/compiler/interface2.jl:0\n\n     [16] (::Zygote.var\"#41#42\"{typeof(∂(nlml))})(::Float64) at /home/paveloom/.julia/packages/Zygote/seGHk/src/compiler/interface.jl:45\n\n     [17] gradient(::Function, ::Array{Float64,1}) at /home/paveloom/.julia/packages/Zygote/seGHk/src/compiler/interface.jl:54\n\n     [18] (::var\"#17#18\")(::Array{Float64,1}) at ./In[185]:12\n\n     [19] (::Optim.var\"#48#49\"{var\"#17#18\"})(::Array{Float64,1}, ::Array{Float64,1}) at /home/paveloom/.julia/packages/Optim/UkDyx/src/multivariate/solvers/constrained/fminbox.jl:150\n\n     [20] fg! at /home/paveloom/.julia/packages/NLSolversBase/mGaJg/src/objective_types/abstract.jl:13 [inlined]\n\n     [21] function_barrier(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::NLSolversBase.var\"#fg!#8\"{typeof(nlml),Optim.var\"#48#49\"{var\"#17#18\"}}, ::Optim.var\"#60#66\"{Array{Float64,1},Array{Float64,1}}) at /home/paveloom/.julia/packages/Optim/UkDyx/src/multivariate/solvers/constrained/fminbox.jl:56\n\n     [22] (::Optim.var\"#61#67\"{OnceDifferentiable{Float64,Array{Float64,1},Array{Float64,1}},Optim.var\"#60#66\"{Array{Float64,1},Array{Float64,1}}})(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at /home/paveloom/.julia/packages/Optim/UkDyx/src/multivariate/solvers/constrained/fminbox.jl:196\n\n     [23] barrier_combined(::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Optim.var\"#61#67\"{OnceDifferentiable{Float64,Array{Float64,1},Array{Float64,1}},Optim.var\"#60#66\"{Array{Float64,1},Array{Float64,1}}}, ::Base.RefValue{Float64}) at /home/paveloom/.julia/packages/Optim/UkDyx/src/multivariate/solvers/constrained/fminbox.jl:61\n\n     [24] (::Optim.var\"#63#69\"{Optim.var\"#61#67\"{OnceDifferentiable{Float64,Array{Float64,1},Array{Float64,1}},Optim.var\"#60#66\"{Array{Float64,1},Array{Float64,1}}},Array{Float64,1},Array{Float64,1},Base.RefValue{Float64}})(::Array{Float64,1}, ::Array{Float64,1}) at /home/paveloom/.julia/packages/Optim/UkDyx/src/multivariate/solvers/constrained/fminbox.jl:254\n\n     [25] value_gradient!!(::OnceDifferentiable{Float64,Array{Float64,1},Array{Float64,1}}, ::Array{Float64,1}) at /home/paveloom/.julia/packages/NLSolversBase/mGaJg/src/interface.jl:82\n\n     [26] value_gradient!(::OnceDifferentiable{Float64,Array{Float64,1},Array{Float64,1}}, ::Array{Float64,1}) at /home/paveloom/.julia/packages/NLSolversBase/mGaJg/src/interface.jl:69\n\n     [27] value_gradient!(::Optim.ManifoldObjective{OnceDifferentiable{Float64,Array{Float64,1},Array{Float64,1}}}, ::Array{Float64,1}) at /home/paveloom/.julia/packages/Optim/UkDyx/src/Manifolds.jl:50\n\n     [28] (::LineSearches.var\"#ϕdϕ#6\"{Optim.ManifoldObjective{OnceDifferentiable{Float64,Array{Float64,1},Array{Float64,1}}},Array{Float64,1},Array{Float64,1},Array{Float64,1}})(::Float64) at /home/paveloom/.julia/packages/LineSearches/WrsMD/src/LineSearches.jl:84\n\n     [29] (::LineSearches.HagerZhang{Float64,Base.RefValue{Bool}})(::Function, ::LineSearches.var\"#ϕdϕ#6\"{Optim.ManifoldObjective{OnceDifferentiable{Float64,Array{Float64,1},Array{Float64,1}}},Array{Float64,1},Array{Float64,1},Array{Float64,1}}, ::Float64, ::Float64, ::Float64) at /home/paveloom/.julia/packages/LineSearches/WrsMD/src/hagerzhang.jl:236\n\n     [30] HagerZhang at /home/paveloom/.julia/packages/LineSearches/WrsMD/src/hagerzhang.jl:101 [inlined]\n\n     [31] perform_linesearch!(::Optim.LBFGSState{Array{Float64,1},Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1}}, ::LBFGS{Optim.InverseDiagonal,LineSearches.InitialStatic{Float64},LineSearches.HagerZhang{Float64,Base.RefValue{Bool}},Optim.var\"#62#68\"{Array{Float64,1},Array{Float64,1},Fminbox{LBFGS{Nothing,LineSearches.InitialStatic{Float64},LineSearches.HagerZhang{Float64,Base.RefValue{Bool}},Optim.var\"#19#21\"},Float64,Optim.var\"#43#45\"},Base.RefValue{Float64}}}, ::Optim.ManifoldObjective{OnceDifferentiable{Float64,Array{Float64,1},Array{Float64,1}}}) at /home/paveloom/.julia/packages/Optim/UkDyx/src/utilities/perform_linesearch.jl:53\n\n     [32] update_state!(::OnceDifferentiable{Float64,Array{Float64,1},Array{Float64,1}}, ::Optim.LBFGSState{Array{Float64,1},Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1}}, ::LBFGS{Optim.InverseDiagonal,LineSearches.InitialStatic{Float64},LineSearches.HagerZhang{Float64,Base.RefValue{Bool}},Optim.var\"#62#68\"{Array{Float64,1},Array{Float64,1},Fminbox{LBFGS{Nothing,LineSearches.InitialStatic{Float64},LineSearches.HagerZhang{Float64,Base.RefValue{Bool}},Optim.var\"#19#21\"},Float64,Optim.var\"#43#45\"},Base.RefValue{Float64}}}) at /home/paveloom/.julia/packages/Optim/UkDyx/src/multivariate/solvers/first_order/l_bfgs.jl:198\n\n     [33] optimize(::OnceDifferentiable{Float64,Array{Float64,1},Array{Float64,1}}, ::Array{Float64,1}, ::LBFGS{Optim.InverseDiagonal,LineSearches.InitialStatic{Float64},LineSearches.HagerZhang{Float64,Base.RefValue{Bool}},Optim.var\"#62#68\"{Array{Float64,1},Array{Float64,1},Fminbox{LBFGS{Nothing,LineSearches.InitialStatic{Float64},LineSearches.HagerZhang{Float64,Base.RefValue{Bool}},Optim.var\"#19#21\"},Float64,Optim.var\"#43#45\"},Base.RefValue{Float64}}}, ::Optim.Options{Float64,Nothing}, ::Optim.LBFGSState{Array{Float64,1},Array{Array{Float64,1},1},Array{Array{Float64,1},1},Float64,Array{Float64,1}}) at /home/paveloom/.julia/packages/Optim/UkDyx/src/multivariate/optimize/optimize.jl:57\n\n     [34] optimize(::OnceDifferentiable{Float64,Array{Float64,1},Array{Float64,1}}, ::Array{Float64,1}, ::LBFGS{Optim.InverseDiagonal,LineSearches.InitialStatic{Float64},LineSearches.HagerZhang{Float64,Base.RefValue{Bool}},Optim.var\"#62#68\"{Array{Float64,1},Array{Float64,1},Fminbox{LBFGS{Nothing,LineSearches.InitialStatic{Float64},LineSearches.HagerZhang{Float64,Base.RefValue{Bool}},Optim.var\"#19#21\"},Float64,Optim.var\"#43#45\"},Base.RefValue{Float64}}}, ::Optim.Options{Float64,Nothing}) at /home/paveloom/.julia/packages/Optim/UkDyx/src/multivariate/optimize/optimize.jl:33\n\n     [35] optimize(::OnceDifferentiable{Float64,Array{Float64,1},Array{Float64,1}}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}, ::Fminbox{LBFGS{Nothing,LineSearches.InitialStatic{Float64},LineSearches.HagerZhang{Float64,Base.RefValue{Bool}},Optim.var\"#19#21\"},Float64,Optim.var\"#43#45\"}, ::Optim.Options{Float64,Nothing}) at /home/paveloom/.julia/packages/Optim/UkDyx/src/multivariate/solvers/constrained/fminbox.jl:283\n\n     [36] #optimize#47 at /home/paveloom/.julia/packages/Optim/UkDyx/src/multivariate/solvers/constrained/fminbox.jl:153 [inlined]\n\n     [37] top-level scope at In[185]:10\n\n     [38] include_string(::Function, ::Module, ::String, ::String) at ./loading.jl:1091\n\n","category":"page"},{"location":"generated/notebooks/DSS/DSS/","page":"DSS","title":"DSS","text":"Aᵣ, lᵣ, Pᵣ = unpack(results.minimizer);\n\nkᵣ = Aᵣ * stretch(Stheno.EQ(), 1 / lᵣ^2) * Stheno.Cosine(Pᵣ / 2);\ng = GP(μ₀, kᵣ, GPC());\ngₚ = g | Obs(g(t, 0.05), f);\n\nplt = Plots.plot()\nplot!(plt, gₚ(t); samples=10, label=\"\", color=:blue);\ndisplay(plt)","category":"page"},{"location":"generated/notebooks/DSS/DSS/","page":"DSS","title":"DSS","text":"(Image: svg)","category":"page"},{"location":"generated/notebooks/DSS/DSS/","page":"DSS","title":"DSS","text":"\n    ┌ Warning: Attribute alias `width` detected in the user recipe defined for the signature (::Stheno.FiniteGP{Stheno.CompositeGP{Tuple{typeof(|),GP{Stheno.ConstMean{Float32},Stheno.Product{Stheno.Scaled{Array{Float64,1},Stheno.Stretched{Array{Float64,1},EQ,typeof(identity)},typeof(identity)},Stheno.Cosine{Array{Float64,1},typeof(identity)}}},LinearAlgebra.Cholesky{Float64,Array{Float64,2}},Array{Float64,1},Stheno.FiniteGP{GP{Stheno.ConstMean{Float32},Stheno.Product{Stheno.Scaled{Array{Float64,1},Stheno.Stretched{Array{Float64,1},EQ,typeof(identity)},typeof(identity)},Stheno.Cosine{Array{Float64,1},typeof(identity)}}},Array{Float64,1},LinearAlgebra.Diagonal{Float64,FillArrays.Fill{Float64,1,Tuple{Base.OneTo{Int64}}}}},Array{Float32,1}}},Array{Float64,1},LinearAlgebra.Diagonal{Float64,FillArrays.Fill{Float64,1,Tuple{Base.OneTo{Int64}}}}}). To ensure expected behavior it is recommended to use the default attribute `linewidth`.\n    └ @ Plots /home/paveloom/.julia/packages/Plots/ViMfq/src/pipeline.jl:15\n\n","category":"page"},{"location":"generated/notebooks/DSS/DSS/","page":"DSS","title":"DSS","text":"using LinearAlgebra","category":"page"},{"location":"generated/notebooks/DSS/DSS/","page":"DSS","title":"DSS","text":"θ₀ = [0.03782039385618707, 27.800588611994993, 4.025972513638813 / 2]\ng = Stheno.GP(θ₀[1] * EQC(θ₀[2]) * Stheno.Cosine(θ₀[3]), Stheno.GPC())\n\nmatrix = cov(g(t, 0.05))","category":"page"},{"location":"generated/notebooks/DSS/DSS/","page":"DSS","title":"DSS","text":"\n    3518×3518 Array{Float64,2}:\n     0.0878204   0.0373649   0.036031   …  0.0         0.0         0.0\n     0.0373649   0.0878204   0.0373649     0.0         0.0         0.0\n     0.036031    0.0373649   0.0878204     0.0         0.0         0.0\n     0.0339126   0.036031    0.0373649     0.0         0.0         0.0\n     0.0311543   0.0339126   0.036031      0.0         0.0         0.0\n     0.0279346   0.0311543   0.0339126  …  0.0         0.0         0.0\n     0.0244473   0.0279346   0.0311543     0.0         0.0         0.0\n     0.0208823   0.0244473   0.0279346     0.0         0.0         0.0\n     0.0174091   0.0208823   0.0244473     0.0         0.0         0.0\n     0.0141651   0.0174091   0.0208823     0.0         0.0         0.0\n     0.0112487   0.0141651   0.0174091  …  0.0         0.0         0.0\n     0.00871785  0.0112487   0.0141652     0.0         0.0         0.0\n     0.00659375  0.00871784  0.0112487     0.0         0.0         0.0\n     ⋮                                  ⋱  ⋮                       \n     0.0         0.0         0.0           0.0016902   0.00113116  0.000738625\n     0.0         0.0         0.0           0.00350586  0.00246426  0.00169019\n     0.0         0.0         0.0           0.00659396  0.00486716  0.00350586\n     0.0         0.0         0.0           0.00871806  0.00659395  0.00486715\n     0.0         0.0         0.0        …  0.0112489   0.00871806  0.00659394\n     0.0         0.0         0.0           0.0174093   0.0141654   0.0112489\n     0.0         0.0         0.0           0.0208825   0.0174093   0.0141654\n     0.0         0.0         0.0           0.0311544   0.0279347   0.0244474\n     0.0         0.0         0.0           0.036031    0.0339127   0.0311544\n     0.0         0.0         0.0        …  0.0878204   0.0373649   0.036031\n     0.0         0.0         0.0           0.0373649   0.0878204   0.0373649\n     0.0         0.0         0.0           0.036031    0.0373649   0.0878204\n\n\n","category":"page"},{"location":"generated/notebooks/DSS/DSS/","page":"DSS","title":"DSS","text":"isposdef(matrix)","category":"page"},{"location":"generated/notebooks/DSS/DSS/","page":"DSS","title":"DSS","text":"\n    true\n\n\n","category":"page"},{"location":"generated/notebooks/DSS/DSS/","page":"DSS","title":"DSS","text":"θₜ = [209401.23928068715, 0.55, 3.88, 2.125677794326631e6, 6000]\nprintln(nlml(θₜ))\n\ng = Stheno.GP(θₜ[4], θₜ[1] * stretch(EQ(), 1 / θₜ[2]^2) * Stheno.Cosine(θₜ[3] / 2), Stheno.GPC())\n\nx = t\ny = rand(g(x, θₜ[5]))\n\nPyPlot.plot(x, y; color)","category":"page"},{"location":"generated/notebooks/DSS/DSS/","page":"DSS","title":"DSS","text":"(Image: png)","category":"page"},{"location":"generated/notebooks/DSS/DSS/","page":"DSS","title":"DSS","text":"\n    21192.89377199526\n\n\n\n\n\n    1-element Array{PyObject,1}:\n     PyObject <matplotlib.lines.Line2D object at 0x7f6188c60580>\n\n\n","category":"page"},{"location":"generated/notebooks/DSS/DSS/","page":"DSS","title":"DSS","text":"P = range(2, 10; step = 0.1)\nfor (i, Pᵢ) in enumerate(P)\n    θₜ = [209401.23928068715, 0.55, Pᵢ, 2.125677794326631e6, 6000]\n    g = Stheno.GP(θₜ[4], θₜ[1] * stretch(EQ(), 1 / θₜ[2]^2) * Stheno.Cosine(θₜ[3] / 2), Stheno.GPC())\n    println(Pᵢ, \" \"^3, -logpdf(g(t, θₜ[5]), f))\nend","category":"page"},{"location":"generated/notebooks/DSS/DSS/","page":"DSS","title":"DSS","text":"\n    2.0   21220.748207337296\n    2.1   21216.04344851742\n    2.2   21212.111958993148\n    2.3   21208.81561845265\n    2.4   21206.04532580988\n    2.5   21203.713729221185\n    2.6   21201.750101982776\n    2.7   21200.09663351637\n    2.8   21198.705685165492\n    2.9   21197.537722653396\n    3.0   21196.55973435347\n    3.1   21195.74400518454\n    3.2   21195.067155118584\n    3.3   21194.509377371873\n    3.4   21194.053829168974\n    3.5   21193.68614039482\n    3.6   21193.394014270074\n    3.7   21193.166900537974\n    3.8   21192.9957262864\n    3.9   21192.872672948615\n    4.0   21192.790990582413\n    4.1   21192.744842445627\n    4.2   21192.729174355423\n    4.3   21192.739604434995\n    4.4   21192.772329726704\n    4.5   21192.8240468234\n    4.6   21192.891884207882\n    4.7   21192.97334440895\n    4.8   21193.06625442236\n    4.9   21193.16872311287\n    5.0   21193.27910453489\n    5.1   21193.395966283275\n    5.2   21193.51806213362\n    5.3   21193.64430834932\n    5.4   21193.77376312938\n    5.5   21193.90560875459\n    5.6   21194.039136054864\n    5.7   21194.17373087885\n    5.8   21194.308862292768\n    5.9   21194.444072275386\n    6.0   21194.57896671048\n    6.1   21194.7132075047\n    6.2   21194.846505684534\n    6.3   21194.97861534486\n    6.4   21195.109328340463\n    6.5   21195.2384696252\n    6.6   21195.365893157224\n    6.7   21195.49147829973\n    6.8   21195.61512665466\n    6.9   21195.736759276795\n    7.0   21195.856314220724\n    7.1   21195.973744380222\n    7.2   21196.089015585232\n    7.3   21196.20210492418\n    7.4   21196.312999265818\n    7.5   21196.42169395576\n    7.6   21196.528191667756\n    7.7   21196.632501390643\n    7.8   21196.734637536018\n    7.9   21196.834619151014\n    8.0   21196.932469225532\n    8.1   21197.028214081747\n    8.2   21197.121882836793\n    8.3   21197.21350692993\n    8.4   21197.303119707583\n    8.5   21197.3907560578\n    8.6   21197.47645209069\n    8.7   21197.560244857734\n    8.8   21197.64217210629\n    8.9   21197.722272065475\n    9.0   21197.800583259323\n    9.1   21197.877144344075\n    9.2   21197.951993967446\n    9.3   21198.025170646604\n    9.4   21198.096712663508\n    9.5   21198.166657974354\n    9.6   21198.23504413302\n    9.7   21198.301908225887\n    9.8   21198.367286816538\n    9.9   21198.43121590077\n    10.0   21198.493730867558\n\n","category":"page"},{"location":"generated/notebooks/DSS/DSS/","page":"DSS","title":"DSS","text":"σ² = range(6000, 7000; step = 10)\nfor (i, σ²ᵢ) in enumerate(σ²)\n    θₜ = [209401.23928068715, 0.55, 3.88, 2.125677794326631e6, σ²ᵢ]\n    g = Stheno.GP(θₜ[4], θₜ[1] * stretch(EQ(), 1 / θₜ[2]^2) * Stheno.Cosine(θₜ[3] / 2), Stheno.GPC())\n    println(σ²ᵢ, \" \"^3, -logpdf(g(t, θₜ[5]), f))\nend","category":"page"},{"location":"generated/notebooks/DSS/DSS/","page":"DSS","title":"DSS","text":"\n    6000   21192.89377199526\n    6010   21192.871122543194\n    6020   21192.852758366884\n    6030   21192.838651445254\n    6040   21192.828773964407\n    6050   21192.82309831539\n    6060   21192.821597092785\n    6070   21192.82424309299\n    6080   21192.831009312045\n    6090   21192.841868944193\n    6100   21192.85679538002\n    6110   21192.875762204996\n    6120   21192.89874319754\n    6130   21192.925712327233\n    6140   21192.956643753583\n    6150   21192.99151182401\n    6160   21193.030291072537\n    6170   21193.07295621784\n    6180   21193.119482161925\n    6190   21193.169843988297\n    6200   21193.22401696101\n    6210   21193.281976522107\n    6220   21193.343698291137\n    6230   21193.40915806298\n    6240   21193.478331806567\n    6250   21193.55119566352\n    6260   21193.627725946233\n    6270   21193.70789913717\n    6280   21193.791691886752\n    6290   21193.87908101221\n    6300   21193.97004349613\n    6310   21194.06455648524\n    6320   21194.162597288665\n    6330   21194.264143376822\n    6340   21194.369172380102\n    6350   21194.47766208736\n    6360   21194.589590444717\n    6370   21194.70493555414\n    6380   21194.823675672164\n    6390   21194.9457892087\n    6400   21195.071254725757\n    6410   21195.20005093593\n    6420   21195.332156701552\n    6430   21195.46755103299\n    6440   21195.606213087878\n    6450   21195.74812216967\n    6460   21195.89325772627\n    6470   21196.04159934919\n    6480   21196.193126772196\n    6490   21196.347819870054\n    6500   21196.50565865759\n    6510   21196.666623288344\n    6520   21196.83069405342\n    6530   21196.997851380616\n    6540   21197.16807583304\n    6550   21197.34134810819\n    6560   21197.517649036767\n    6570   21197.69695958141\n    6580   21197.87926083611\n    6590   21198.064534024776\n    6600   21198.252760500116\n    6610   21198.443921742815\n    6620   21198.63799936057\n    6630   21198.83497508677\n    6640   21199.03483077968\n    6650   21199.237548421363\n    6660   21199.44311011687\n    6670   21199.651498092906\n    6680   21199.86269469725\n    6690   21200.07668239741\n    6700   21200.29344378002\n    6710   21200.512961549583\n    6720   21200.735218527665\n    6730   21200.960197652214\n    6740   21201.187881976002\n    6750   21201.418254666412\n    6760   21201.65129900408\n    6770   21201.88699838224\n    6780   21202.12533630553\n    6790   21202.366296389606\n    6800   21202.60986235985\n    6810   21202.85601805041\n    6820   21203.104747404046\n    6830   21203.356034470384\n    6840   21203.609863405654\n    6850   21203.86621847181\n    6860   21204.125084035317\n    6870   21204.38644456698\n    6880   21204.650284640367\n    6890   21204.916588931716\n    6900   21205.185342218712\n    6910   21205.45652937977\n    6920   21205.730135393365\n    6930   21206.006145337153\n    6940   21206.284544387156\n    6950   21206.565317817323\n    6960   21206.848450998295\n    6970   21207.133929397023\n    6980   21207.4217385759\n    6990   21207.71186419196\n    7000   21208.004291996367\n","category":"page"},{"location":"","page":"Home","title":"Home","text":"EditURL = \"nothing\"","category":"page"},{"location":"#GPKernels","page":"Home","title":"GPKernels","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This work is in progress.","category":"page"}]
}
